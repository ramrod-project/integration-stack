# We will need sudo to run docker commands
# TODO:

sudo: required

# In case we need python for testing at come
# point.
language: python

# Working with version 3.6
python:
  - "3.6"

# We require docker
services:
  - docker

branches:
  only:
  - master
  - dev
  - qa

# The following are the pipeline stages. They
# are executed in order inside of a VM in a bash
# shell, (thus they use bash syntax).
# 
# This step runs before the install step,
# and is the first step in this case. Here we
# pull down the requisite code from the
# repository.
# 
before_install:
  - if [ "$TRAVIS_BRANCH" == "master" ]; 
    then export TAG=latest;
    else export TAG=$TRAVIS_BRANCH; fi
  - export LOGLEVEL=DEBUG
  - sudo apt-add-repository ppa:mozillateam/firefox-next
  - sudo apt-get update
  - sudo apt-get install firefox xvfb
  - Xvfb :10 -ac &
  - export DISPLAY=:10
  - DOCKER_IP=$(ifconfig -a | grep -A 1 "docker" | awk 'NR==2 {print $2}' | sed 's/addr://g')
  - sudo bash -c "echo \"${DOCKER_IP}     frontend\" >> /etc/hosts"

# Second step, install required dependencies.
install:
  - docker pull ramrodpcp/frontend-ui:$TAG
  - docker pull ramrodpcp/database-brain:$TAG
  - docker pull ramrodpcp/backend-controller:$TAG
  - docker pull ramrodpcp/interpreter-plugin:$TAG
  - docker pull ramrodpcp/websocket-server:$TAG
  - docker pull ramrodpcp/robot-framework-xvfb:$TAG
  - docker pull ramrodpcp/auxiliary-wrapper:$TAG
  - docker pull ramrodpcp/auxiliary-services:$TAG

# Third step, set up environment and run the stack.
before_script:
  - docker swarm init
  - docker network create --driver=overlay --attachable pcp
  - mkdir db_logs 2>&1 >>/dev/null
  - START_HARNESS=YES START_AUX=YES TAG=$TAG LOGLEVEL=DEBUG LOGDIR=../ docker stack deploy -c docker/docker-compose.yml pcp-test >> /dev/null
  - sleep 30
  - docker stack ps pcp-test --no-trunc
  - docker ps -a

# Fourth step, test away!
script:
  - pip install -r linharn/requirements.txt
  - pytest linharn/e2e.py

# Cleanup, housekeeping
after_success:
  - docker stack rm test-stack
  - docker ps -a | grep -v CONTAINER | awk '{print $1}' | xargs docker stop

notifications:
  slack: ramrod-project:GDF82rRYDg3KSekrT3GA24qO